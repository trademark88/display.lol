'use client';

import { useState, ChangeEvent, DragEvent } from 'react';

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/Llb6xsyG47t
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
export function Upload() {
  const [dragOver, setDragOver] = useState(false);
  const [message, setMessage] = useState<string>('');

  const handleDrop = (e: DragEvent<HTMLDivElement>) => {
    e.preventDefault();
    setDragOver(false);
    const files = e.dataTransfer.files;
    handleFiles(files[0]);
  };

  const handleDragOver = (e: DragEvent<HTMLDivElement>) => {
    e.preventDefault();
    setDragOver(true);
  };

  const handleDragLeave = () => {
    setDragOver(false);
  };

  const handleFiles = async (file: File) => {
    const formData = new FormData();
    formData.append('background', file)

    try {
      const response = await fetch('/api/customize/upload/background', {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) {
        throw new Error('Failed to upload file');
      }

      const result = await response.json();
      setMessage(`File uploaded successfully: ${result.file}`);
    } catch (error: any) {
      setMessage(`Error: ${error.message}`);
    }
  };

  const handleFileInputChange = (e: ChangeEvent<HTMLInputElement>) => {
    const files = e.target.files;
    if (files) {
      handleFiles(files[0]);
    }
  };

  return (
    <div className="p-6 bg-primary rounded-2xl text-white">
      <h2 className="mb-4 text-xl font-bold">Assets Uploader</h2>
      <div className="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4">
        {["Background", "Custom Cursor", "Profile Avatar", "Audio"].map((label) => (
          <div key={label} className="p-4 rounded-lg">
            <h3 className="mb-2 text-lg font-semibold">{label}</h3>
            <div
              className={`relative flex flex-col items-center justify-center h-40 border-2 border-dashed rounded-md ${
                dragOver ? 'border-blue-500' : 'border-gray-400'
              }`}
              onDrop={handleDrop}
              onDragOver={handleDragOver}
              onDragLeave={handleDragLeave}
            >
              <ImageIcon className="w-12 h-12 text-gray-400" />
              <p className="mt-2 text-sm text-gray-400">Click or Drag and drop a file</p>
              <input
                type="file"
                className="absolute inset-0 opacity-0"
                onChange={handleFileInputChange}
                multiple
              />
            </div>
          </div>
        ))}
      </div>
      {message && <p className="mt-4 text-sm">{message}</p>}
    </div>
  );
}

interface IconProps {
  className?: string;
}

function ImageIcon(props: IconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="18" x="3" y="3" rx="2" ry="2" />
      <circle cx="9" cy="9" r="2" />
      <path d="m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21" />
    </svg>
  );
}

function XIcon(props: IconProps) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  );
}
